/-kdl-version 2
node_parent "argument" +5 property⚿=1 p⚿=#true p⚿="www.com/?q={}" "arg3😁utf8"  {
  node_child p⚿=(type_annotation)"query" // intersperse arguments and properties
  terminate-node1; node2␤
  node3// line comment ; ␤ eof
}
"4 value/data types" {
  • 1 bool    	= #true #false
  • 2 "null"  	= #null
  • 3 string  	="Regular with escapes \t \\ \u{FF} and multiline (escaped→)\
      support"	multiline="""
      ↓ with  	dedented whitespace up to the closing quotes
      """     	raw=#"\t no esc"#   ##"Multiple "#" to allow " and #"##
  • 4 numbers 	=(decimal)-3 (decimal)-1.234 (decimal)+1.234e-42\
    (hex)0xFF (octal)0o755 (binary)0b101 digit_separator_=1_000_000 (float)#inf #-inf #nan
}
"node quoted for (arbitrary) names|!@#$@$%Q#$%~@!40" "1.2.3" "!prop quoted!"=#true
nodeーbare𐀀ノド1~!@<>ÿ$%^‰&*.:'|?+† p⚿ーbareお名前="non-quoted names support many symbols"
/* comment: block*/ /*!doc block /*nested block*/*/ // line
  /-nodeNestedSlashdashed "disabled" key=1 { node_inner_disabled
  but retain="all" (the)"scopes" /-(of)"its elements" {
    including children=#true 1 ; } // mute commented style colors in color scheme
  r 1 { r 2 { r 3 { r 4 { r 5 { r 6; r "last child node can skip ; terminator" }; }; }; }; }
}; node_post_slashdashed_with-slashdash-number /--1.0 +2.0 key=1 /-p2=2
node-with-line-continuations \ // Split node into multiple lines
  +1.1 2                     \ // with multiple //single-line comments
  "After line continuation"

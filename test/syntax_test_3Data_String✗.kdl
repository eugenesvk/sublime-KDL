// SYNTAX TEST "Packages/KDL/KDL2.sublime-syntax"

// 3 Data: Strings
// Unquoted (str🆔)
n xtrue  xfalse  xnull  xnan x-inf  xinf  2
//^^^^^                                           meta.string.kdl string.unquoted.kdl
//       ^^^^^^                                   meta.string.kdl string.unquoted.kdl
//               ^^^^^                            meta.string.kdl string.unquoted.kdl
//                      ^^^^                      meta.string.kdl string.unquoted.kdl
//                           ^^^^^                meta.string.kdl string.unquoted.kdl
//                                  ^^^^          meta.string.kdl string.unquoted.kdl
n  truex  falsex  nullx  nanx -infx  infx 2
// ^^^^^                                          meta.string.kdl string.unquoted.kdl
//        ^^^^^^                                  meta.string.kdl string.unquoted.kdl
//                ^^^^^                           meta.string.kdl string.unquoted.kdl
//                       ^^^^                     meta.string.kdl string.unquoted.kdl
//                            ^^^^^               meta.string.kdl string.unquoted.kdl
//                                   ^^^^         meta.string.kdl string.unquoted.kdl
n "aaa" +aadaf+3443 1
//      ^^^^^^^^^^^                               meta.string.kdl string.unquoted.kdl

a #"\
//   ^                                          string.quoted.double.raw.kdl invalid.illegal.position.kdl
"# i="Invalid newlines in raw strings"

a #"
//  ^                                           string.quoted.double.raw.kdl invalid.illegal.position.kdl
"# i="And no way to escape them"

a """
  " "" """
//^                                          string.quoted.double.block.kdl invalid.illegal.position.kdl
// ^^^^                                      string.quoted.double.block.kdl invalid.illegal.muted.position.kdl

n """
a  " """
//<-                                         string.quoted.double.block.kdl invalid.illegal.position.kdl
 //<-                                        string.quoted.double.block.kdl invalid.illegal.muted.position.kdl
//^^^                                        string.quoted.double.block.kdl invalid.illegal.muted.position.kdl

#"Multiline strings must have ␤ after the starting """ and before the ending """ "#
a """err_not_nl
//   ^                                          string.quoted.double.block.kdl invalid.illegal.position.kdl
//    ^^^^^^^^^                                 string.quoted.double.block.kdl invalid.illegal.muted.position.kdl
x
err_not_ws"""
//<-                                            string.quoted.double.block.kdl invalid.illegal.position.kdl
 //<-                                           string.quoted.double.block.kdl invalid.illegal.muted.position.kdl
//^^^^^^^^                                      string.quoted.double.block.kdl invalid.illegal.muted.position.kdl

a b="""err_not_nl
//     ^                                        string.quoted.double.block.kdl invalid.illegal.position.kdl
//      ^^^^^^^^^                               string.quoted.double.block.kdl invalid.illegal.muted.position.kdl
err_not_ws"""
//<-                                            string.quoted.double.block.kdl invalid.illegal.position.kdl
 //<-                                           string.quoted.double.block.kdl invalid.illegal.muted.position.kdl
//^^^^^^^^                                      string.quoted.double.block.kdl invalid.illegal.muted.position.kdl

a b="""err_not_nl
//     ^                                        string.quoted.double.block.kdl invalid.illegal.position.kdl
//      ^^^^^^^^^                               string.quoted.double.block.kdl invalid.illegal.muted.position.kdl
  \ \ err_not_ws"""
//<-                                           -invalid.illegal.position.kdl
 //<-                                          -invalid.illegal.muted.position.kdl
//    ^                                         invalid.illegal.position.kdl
//     ^^^^^^^^^                                invalid.illegal.muted.position.kdl

v1 r"no" "prefix in v2"
// ^                                              invalid.illegal.position.kdl

a #"""#
//    ^                                         string.quoted.double.block.raw.kdl invalid.illegal.position.kdl
"""#

v1 r###""""Rawest"""string""""###
// ^                                               invalid.illegal.position.kdl
//        ^                                        invalid.illegal.position.kdl
//         ^^^^^^^^^^^^^^^^^^^^^^                  invalid.illegal.muted.position.kdl
no "\u \u{} escape"
//  ^                                             -constant.character.escape.kdl punctuation.definition.escape.begin.kdl
//     ^                                          -constant.character.escape.kdl punctuation.definition.escape.begin.kdl
"""###
node r#"foo"# i=legacy_raw_string_hash_fail
//   ^                                             string.quoted.double.raw.kdl invalid.illegal.position.kdl
//    ^^                                           string.quoted.double.raw.kdl punctuation.definition.string.begin.kdl
no #"Surrogates even in \u escaped form"#\
high="\u{D800}\u{D911}\u{DABB}\u{DBFF}" low="\u{DC00}\u{DEAD}\u{DFFF}" uok="\u{0}\u{D799}"
//    ^                                                                constant.character.escape.kdl
//     ^^^^^^^                                                         constant.character.escape.utf8.hex.kdl
//       ^^^^                                                          constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl
//               ^^^^                                                  constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl
//                       ^^^^                                          constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl
//                               ^^^^                                  constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl
//                                              ^^^^                   constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl
//                                                      ^^^^           constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl
//                                                              ^^^^   constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl
//                                                                           ^^^^         -invalid.illegal.muted.position.kdl
//                                                                                ^^^^^^^ -invalid.illegal.muted.position.kdl
a "\u{11FFFF} \u{110FFFF}" !="Unicode escaped above valid USV \u{10FFFF} char-esc-uni🛑"
//    ^^^^^^                            constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl
//               ^^^^^^^                constant.character.escape.utf8.hex.kdl invalid.illegal.muted.position.kdl

b "Single-quoted strings can't have newlines outside of escaped whitespace"
n "
// ^                                     invalid.illegal.position.kdl
"
n "

//<-                                     invalid.illegal.muted.position.kdl
"
n "asdf              　
              　  //   ^                     invalid.illegal.position.kdl"

n "asdf\
aa
//^                                      invalid.illegal.position.kdl

//<-                                     invalid.illegal.muted.position.kdl
"
b "\sab\
                　cdefg\ssbz
//                         ^             invalid.illegal.position.kdl
"

  r"nn" r"arg" p=r"val" i=legacy_raw_string_fail
//^                       invalid.illegal.position.kdl
// ^^^                   -invalid.illegal.position.kdl
//^^^^^                   string.quoted.double.kdl
//  ^^^                   entity.name.tag.node.kdl
// ^                      punctuation.definition.string.begin.kdl
//    ^                   punctuation.definition.string.end.kdl
//      ^                 invalid.illegal.position.kdl
//       ^^^^^           -invalid.illegal.position.kdl
//       ^^^^^            string.quoted.double.kdl
//         ^^^            meta.argument.value.kdl meta.mapping.value.kdl
//       ^                punctuation.definition.string.begin.kdl
//           ^            punctuation.definition.string.end.kdl
//               ^        invalid.illegal.position.kdl
//                ^^^^^  -invalid.illegal.position.kdl
//                ^^^^^   string.quoted.double.kdl
//                  ^^^   meta.property.value.kdl meta.mapping.value.kdl
//                ^       punctuation.definition.string.begin.kdl
//                    ^   punctuation.definition.string.end.kdl

node i=multiline_raw_string_non_matching_prefix_count_error_fail i="Sublime Text doesn't support this whitespace sensitivity" #"""
    hey
  everyone
//<-  -invalid.illegal
     how goes?
  """# i=multiline_raw_string_non_matching_prefix_count_error_fail

node #"""one line"""# i=multiline_raw_string_single_line_err_fail
//   ^^^^             string.quoted.double.block.raw.kdl punctuation.definition.string.begin.kdl
//       ^            invalid.illegal.position.kdl
//        ^^^^^^^^^^^ invalid.illegal.muted.position.kdl
node  """
\ """
//<-  string.quoted.double.block.kdl whitespace.dedent.kdl constant.character.escape.kdl punctuation.definition.escape.begin.kdl
//<- -invalid.illegal.position.kdl
node #"""
\ """# i="raw multiline string's dedents can't have escaped whitespace unlike regular multiline strings"
//<- string.quoted.double.block.raw.kdl invalid.illegal.position.kdl
 //<- invalid.illegal.muted.position.kdl

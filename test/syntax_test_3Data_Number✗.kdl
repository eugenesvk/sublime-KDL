// SYNTAX TEST "Packages/KDL/KDL2.sublime-syntax"

// 3 Data: Numbers
  .1 n i="at least 1 int digit required"
//^                           invalid.illegal.position.kdl
// ^                          invalid.illegal.muted.position.kdl

n "Glued numbers are invalid"
nnn        0b12
//            ^               invalid.illegal.position.kdl
nnn (aaaaa)0b12
//            ^               invalid.illegal.position.kdl
nnn   k=(a)0b12
//            ^               invalid.illegal.position.kdl
nnn /-     0b12
//            ^               invalid.illegal.position.kdl
nnn /-(aaa)0b12
//            ^               invalid.illegal.position.kdl
nnn /-k=(a)0b12
//            ^               invalid.illegal.position.kdl
n   100000+1
//        ^                   invalid.illegal.position.kdl
//         ^                  invalid.illegal.muted.position.kdl
n   10.000+1
//        ^                   invalid.illegal.position.kdl
//         ^                  invalid.illegal.muted.position.kdl
n   10.0e1+1
//        ^                   invalid.illegal.position.kdl
//         ^                  invalid.illegal.muted.position.kdl
n   1000e1+1
//        ^                   invalid.illegal.position.kdl
//         ^                  invalid.illegal.muted.position.kdl
n /-100000+1
//        ^                   invalid.illegal.position.kdl
//         ^                  invalid.illegal.muted.position.kdl
n /-10.000+1
//        ^                   invalid.illegal.position.kdl
//         ^                  invalid.illegal.muted.position.kdl
n /-10.0e1+1
//        ^                   invalid.illegal.position.kdl
//         ^                  invalid.illegal.muted.position.kdl
n /-1000e1+1
//        ^                   invalid.illegal.position.kdl
//         ^                  invalid.illegal.muted.position.kdl
n   (a)100000+1
//           ^                 invalid.illegal.position.kdl
//            ^                invalid.illegal.muted.position.kdl
n   (a)10.000+1
//           ^                 invalid.illegal.position.kdl
//            ^                invalid.illegal.muted.position.kdl
n   (a)10.0e1+1
//           ^                 invalid.illegal.position.kdl
//            ^                invalid.illegal.muted.position.kdl
n   (a)1000e1+1
//           ^                 invalid.illegal.position.kdl
//            ^                invalid.illegal.muted.position.kdl
n /-(a)100000+1
//           ^                 invalid.illegal.position.kdl
//            ^                invalid.illegal.muted.position.kdl
n /-(a)10.000+1
//           ^                 invalid.illegal.position.kdl
//            ^                invalid.illegal.muted.position.kdl
n /-(a)10.0e1+1
//           ^                 invalid.illegal.position.kdl
//            ^                invalid.illegal.muted.position.kdl
n /-(a)1000e1+1
//           ^                 invalid.illegal.position.kdl
//            ^                invalid.illegal.muted.position.kdl
n   kk=(a)100000+1
//              ^              invalid.illegal.position.kdl
//               ^             invalid.illegal.muted.position.kdl
n   kk=(a)10.000+1
//              ^              invalid.illegal.position.kdl
//               ^             invalid.illegal.muted.position.kdl
n   kk=(a)10.0e1+1
//              ^              invalid.illegal.position.kdl
//               ^             invalid.illegal.muted.position.kdl
n   kk=(a)1000e1+1
//              ^              invalid.illegal.position.kdl
//               ^             invalid.illegal.muted.position.kdl
n /-kk=(a)100000+1
//              ^              invalid.illegal.position.kdl
//               ^             invalid.illegal.muted.position.kdl
n /-kk=(a)10.000+1
//              ^              invalid.illegal.position.kdl
//               ^             invalid.illegal.muted.position.kdl
n /-kk=(a)10.0e1+1
//              ^              invalid.illegal.position.kdl
//               ^             invalid.illegal.muted.position.kdl
n /-kk=(a)1000e1+1
//              ^              invalid.illegal.position.kdl
//               ^             invalid.illegal.muted.position.kdl


n 1+12 k=1 "Glued number args are an error"
// ^                                    invalid.illegal.position.kdl
//  ^^                                  invalid.illegal.muted.position.kdl
n k=+1_0+00_000
//      ^                               invalid.illegal.position.kdl -constant.numeric.value.kdl
n k=+1_0.5+00_000
//        ^                             invalid.illegal.position.kdl -constant.numeric.value.kdl
n 10.+12
//   ^                                  invalid.illegal.position.kdl
//    ^^                                invalid.illegal.muted.position.kdl
n 10.5e+12+12 k=1
//        ^                             invalid.illegal.position.kdl
n /-1+12 k=1 "Glued number args are an error"
//   ^                                  invalid.illegal.position.kdl
//    ^^                                invalid.illegal.muted.position.kdl
n k=/-+1_0+00_000
//        ^                             invalid.illegal.position.kdl -constant.numeric.value.kdl
n k=/-+1_0.5+00_000
//          ^                           invalid.illegal.position.kdl -constant.numeric.value.kdl
n /-10.+12
//     ^                                invalid.illegal.position.kdl
//      ^^                              invalid.illegal.muted.position.kdl
n /-10.5e+12+12 k=1
//          ^                           invalid.illegal.position.kdl
n b=0b k=1
//   ^                                  invalid.illegal.position.kdl

n .5; /* gently warn on illegal args */
//^                                     invalid.illegal.position.kdl
// ^                                    invalid.illegal.muted.position.kdl
n .5
//^                                     invalid.illegal.position.kdl
// ^                                    invalid.illegal.muted.position.kdl
/*also before whitespace as .5 can't turn into a legal .5=1 property*/

n .0 !="dot_zero_fail"
//^                                     invalid.illegal.position.kdl
// ^                                    invalid.illegal.muted.position.kdl
n 1.0.0 !="dot_in_exponent_fail"
//   ^                                  invalid.illegal.position.kdl
//    ^                                 invalid.illegal.muted.position.kdl
n 1.e7 !="dot_but_no_fraction_before_exponent_fail"
// ^                                    invalid.illegal.muted.position.kdl
n 1.1e7
// ^                                   -invalid.illegal
n 1. !="dot_but_no_fraction_before_exponent_fail (before space or ;)"
// ^                                    invalid.illegal.muted.position.kdl
n 1.;
// ^                                    invalid.illegal.muted.position.kdl
n 1.
// ^                                   -punctuation.separator.decimal.kdl
// ^                                   -invalid.illegal.position.kdl
// not before newline to avoid flashes while typing, but also don't color it as a decimal if it's not valid
node 0bx01 i=illegal_char_in_binary_fail
//   ^                                  constant.numeric.value.kdl constant.numeric.integer.kdl
//    ^                                 invalid.illegal.position.kdl
//     ^^^                              invalid.illegal.muted.position.kdl
node 0x10g10 i=illegal_char_in_hex_fail
//   ^^                                 constant.numeric.integer.hexadecimal.kdl constant.numeric.base.kdl
//       ^                              invalid.illegal.position.kdl
//        ^^                            invalid.illegal.muted.position.kdl
node 0o45678 i=illegal_char_in_octal_fail
//   ^^                                 constant.numeric.integer.octal.kdl constant.numeric.base.kdl
//         ^                            invalid.illegal.position.kdl

node 1.0E10e10 i=multiple_es_in_float_fail
//      ^                               constant.numeric.value.kdl constant.numeric.float.kdl constant.numeric.exponent.kdl punctuation.separator.exponent.kdl
//         ^                            invalid.illegal.position.kdl
//          ^^                          invalid.illegal.muted.position.kdl
node 1.0.0e7 i=multiple_dots_in_float_before_exponent_fail
//    ^                                 constant.numeric.value.kdl constant.numeric.decimal.kdl punctuation.separator.decimal.kdl
//      ^                               invalid.illegal.position.kdl
//       ^^^                            invalid.illegal.muted.position.kdl
/-de 1.0.0e7 i=multiple_dots_in_float_before_exponent_fail
//    ^                                 constant.numeric.value.kdl constant.numeric.decimal.kdl punctuation.separator.decimal.kdl
//      ^                               invalid.illegal.position.kdl
//       ^^^                            invalid.illegal.muted.position.kdl
node 0xx10 i=multiple_x_in_hex_fail
//   ^                                  constant.numeric.value.kdl constant.numeric.integer.kdl
//    ^                                 invalid.illegal.position.kdl
//     ^^^                              invalid.illegal.muted.position.kdl
node 1.0.0 i=multiple_dots_in_float_fail
//   ^^^                                constant.numeric.value.kdl constant.numeric.decimal.kdl
//      ^                               invalid.illegal.position.kdl
//       ^                              invalid.illegal.muted.position.kdl
node .1 i=no_integer_digit_fail
//   ^                                  invalid.illegal.position.kdl
//    ^                                 invalid.illegal.muted.position.kdl
node 0x1_0 i=underscore_at_start_of_hex_fail
//      ^  constant.numeric.value.kdl punctuation.separator.number.kdl
node 0x_10 i=underscore_at_start_of_hex_fail
//    ^    invalid.illegal.position.kdl
//     ^^^ invalid.illegal.muted.position.kdl
node 1._7 i=underscore_at_start_of_fraction_fail
//     ^                                invalid.illegal.position.kdl
//      ^                               invalid.illegal.muted.position.kdl
/-de 1._7
//     ^                                invalid.illegal.position.kdl
//      ^                               invalid.illegal.muted.position.kdl

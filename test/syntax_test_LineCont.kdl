// SYNTAX TEST "Packages/KDL/KDL2.sublime-syntax"

// 9.1 Test Line continuation
//
//<-                                            comment.line.double-slash.kdl
//
"// single line comments can be immediately followed by a newline"
//<-                                            meta.node.kdl entity.name.tag.node.kdl

n \ /*sadf*/ ✗ /*
  //         ^                                  invalid.illegal.position.kdl
  *//*       ↑ illegal non-whitespace char*/
  /*     legal empty line with a comment ✗→*/
  //                                         ^ -invalid.illegal.position.kdl
  /**/ //✗↓   legal empty line ✗→
  //                             ^             -invalid.illegal.position.kdl

//<-                                           -invalid.illegal.position.kdl
k=1 // ← mark non-whitespace on 2nd+ lines as legal again
//<-                                           -invalid.illegal.position.kdl
n \ /*sadf*/ ✗//
  //         ^                                  invalid.illegal.position.kdl
  //         ^                                  invalid.illegal.position.kdl
k=1


n \ //

//<-                                           -invalid.illegal.position.kdl
  k=1 ←="illegal since \\//␤ ended escline, next ␤ ends node, so this is a new node, not prop of old one"
//^                                             entity.name.tag.node.kdl
//^                                            -invalid.illegal.position.kdl
// ^                                            invalid.illegal.position.kdl
//  ^                                           invalid.illegal.muted.position.kdl
n \
    
  //^                                          -invalid.illegal.position.kdl
  k=1 ←="illegal same see above"
//^                                            -invalid.illegal.position.kdl
//^                                             entity.name.tag.node.kdl
// ^                                            invalid.illegal.position.kdl
//  ^                                           invalid.illegal.muted.position.kdl
n \
  //✗illegal empty line with a comment→
  //                                   ^       -invalid.illegal.position.kdl
  //✗illegal empty line with a comment→
  //                                   ^       -invalid.illegal.position.kdl
  k=1//
//^                                            -invalid.illegal.position.kdl
//^                                             entity.name.tag.node.kdl
// ^                                            invalid.illegal.position.kdl
//  ^                                           invalid.illegal.muted.position.kdl
n \
  /*legal*/ k=1
//^                                            -invalid.illegal.position.kdl
//          ^                                  -invalid.illegal.position.kdl

n\aa k\=1
//^                                               invalid.illegal.position.kdl
// ^                                              invalid.illegal.muted.position.kdl
//     ^                                          invalid.illegal.position.kdl
//      ^                                         invalid.illegal.muted.position.kdl
k=1
//<-                                             -invalid.illegal.position.kdl

k=1
n \    "only comments allowed after line⎋"
//     ^                                          invalid.illegal.position.kdl
//      ^^^^                                      invalid.illegal.muted.position.kdl
//                                         ^     -invalid.illegal.position.kdl
k=1
n \ // "only comments allowed after line⎋"
//  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        comment.line.double-slash
//                                         ^     -invalid.illegal.position.kdl
k=1

n /--1.0 2  \     /**/ //fd
//          ^                                     punctuation.separator.continuation.line.kdl
 k=1
n /--1.0 2 \ /**/ //f
//         ^                                      punctuation.separator.continuation.line.kdl
//           ^^^^                                 comment.block.kdl
//                ^^^                             comment.line.double-slash.kdl
//                   ^                           -comment.line.double-slash.kdl
 k=1
n /--1.0 2 \   //f //
//         ^                                      punctuation.separator.continuation.line.kdl
//             ^^^^^^                             comment.line.double-slash.kdl
//                   ^                           -comment.line.double-slash.kdl
 k=1
n /--1.0 2 \ /f //
//         ^                                      punctuation.separator.continuation.line.kdl
//           ^                                    invalid.illegal.position.kdl
//            ^                                   invalid.illegal.muted.position.kdl
  /*        */
//^^^^^^^^^^^^                                    comment.block.kdl
 k=1

  ‘k’w  a\
  1
//^       meta.argument.value.kdl meta.mapping.value.kdl constant.numeric.value.kdl constant.numeric.integer.kdl
  ‘k’w (a)a\
  1
//^       meta.argument.value.kdl meta.mapping.value.kdl constant.numeric.value.kdl constant.numeric.integer.kdl
/-‘k’w  (a)a\
  1
//^       meta.argument.value.kdl meta.mapping.value.kdl constant.numeric.value.kdl constant.numeric.integer.kdl
/-‘k’w     a\
  1
//^       meta.argument.value.kdl meta.mapping.value.kdl constant.numeric.value.kdl constant.numeric.integer.kdl
/-‘k’w  a\
  1
//^       meta.argument.value.kdl meta.mapping.value.kdl constant.numeric.value.kdl constant.numeric.integer.kdl
/-‘k’w  (a)1\
  1
//^       meta.argument.value.kdl meta.mapping.value.kdl constant.numeric.value.kdl constant.numeric.integer.kdl


illegal-multiple-terminator 1;;
//                            ^                   invalid.illegal.position.kdl

n !="All literal whitespace following \\ in a string discarded (here it's just marked)"
b    "\sar\
                    　nsans\s\ssbz "
//<-                              whitespace.escape.kdl
 //<-                             whitespace.escape.kdl
// ^^^^^^^^^^^^^^^^^^             whitespace.escape.kdl
b    "\sar\                    　
//    ^                           constant.character.escape.kdl punctuation.definition.escape.begin.kdl
//     ^                          constant.character.escape.kdl
//        ^                       constant.character.escape.kdl punctuation.definition.escape.begin.kdl
//         ^^^^^^^^^^^^^^^^^^^^^  whitespace.escape.kdl
\s"
//<-                              constant.character.escape.kdl punctuation.definition.escape.begin.kdl
 //<-                             constant.character.escape.kdl
//^                               punctuation.definition.string.end.kdl

n 1 "x" \
//
//^          -invalid.illegal.position.kdl
n 1 "x" \// ← line comment ends the \escape,   // ¬␤* (␤|eof) also swallowing the →␤
  a=2
//^          -invalid.illegal
//^           meta.node.kdl meta.property.name.kdl meta.mapping.key.kdl entity.other.attribute-name.kdl

n a\
b p=1\
p=a
//<-  meta.property.name.kdl meta.mapping.key.kdl entity.other.attribute-name.kdl
 //<- meta.property.separator.kdl meta.mapping.separator.kdl punctuation.separator.key-value.kdl
//^   meta.property.value.kdl meta.mapping.value.kdl meta.string.kdl string.unquoted.kdl

n a\
b p=a\
p=b
//<-  meta.property.name.kdl meta.mapping.key.kdl entity.other.attribute-name.kdl
 //<- meta.property.separator.kdl meta.mapping.separator.kdl punctuation.separator.key-value.kdl
//^   meta.property.value.kdl meta.mapping.value.kdl meta.string.kdl string.unquoted.kdl

n a\
b p=1\
p=a\/*
//<-  meta.property.name.kdl meta.mapping.key.kdl entity.other.attribute-name.kdl
 //<- meta.property.separator.kdl meta.mapping.separator.kdl punctuation.separator.key-value.kdl
//^   meta.property.value.kdl meta.mapping.value.kdl meta.string.kdl string.unquoted.kdl
*/
p=a\
p=c
//<-  meta.property.name.kdl meta.mapping.key.kdl entity.other.attribute-name.kdl
 //<- meta.property.separator.kdl meta.mapping.separator.kdl punctuation.separator.key-value.kdl
//^   meta.property.value.kdl meta.mapping.value.kdl meta.string.kdl string.unquoted.kdl

n   "a"/*=dash*/   aaa/*=dash*/
//     ^^                       punctuation.definition.comment.begin.kdl
//     ^^^^^^^^^                comment.block.kdl
//            ^^                punctuation.definition.comment.end.kdl
//                    ^^        punctuation.definition.comment.begin.kdl
//                    ^^^^^^^^^ comment.block.kdl
//                           ^^ punctuation.definition.comment.end.kdl
n k=111/*=dash*/ k=aaa/*=dash*/
n k="a"/*=dash*/ k=aaa/*=dash*/
//^                             meta.property.name.kdl meta.mapping.key.kdl entity.other.attribute-name.kdl
// ^                            meta.property.separator.kdl meta.mapping.separator.kdl punctuation.separator.key-value.kdl
//  ^^^                         meta.property.value.kdl meta.mapping.value.kdl meta.string.kdl string.quoted.double.kdl
//     ^^                       punctuation.definition.comment.begin.kdl
//     ^^^^^^^^^                comment.block.kdl
//            ^^                punctuation.definition.comment.end.kdl
//               ^              meta.property.name.kdl meta.mapping.key.kdl entity.other.attribute-name.kdl
//                ^             meta.property.separator.kdl meta.mapping.separator.kdl punctuation.separator.key-value.kdl
//                 ^^^          meta.property.value.kdl meta.mapping.value.kdl meta.string.kdl string.unquoted.kdl
//                    ^^        punctuation.definition.comment.begin.kdl
//                    ^^^^^^^^^ comment.block.kdl
//                           ^^ punctuation.definition.comment.end.kdl

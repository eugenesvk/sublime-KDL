/-kdl-version 1
// |OR "(group)" ignore unquoted _ ; "
nodes	"linespace* (node nodes?)? linespace*"
node 	"(/-         node-space*)? type? identifier
     	 (node-space node-space*   node-prop-or-arg    )*
     	            (node-space*   node-children    ws*)?
     	             node-space*   node-terminator
     	"
node 	"                 (/- node␠*)?    t? ID
     	 ((node␠ node␠*  (/- node␠*)?    t? val       )
     	 |(node␠ node␠*  (/- node␠*)? ID=t? val      ))*
     	        (node␠* (/- node␠*)? { nodes }      ws*)?
     	         node␠*                  node-terminator
     	"

 node-prop-or-arg  	"(/- node-space*)? (prop | value)"
 node-children     	"(/- node-space*)? { nodes }"
node-space         	" ws* escline ws* | ws+"
 ws              ; 	bom|unicode-space|multi-line-comment
 linespace       ; 	      ws|single-line-comment|newline
 escline         ; 	r"\ ws*";single-line-comment|newline
node-terminator  ; 	  ";|eof|single-line-comment|newline"
/*                 	*/
identifier         	r#" bare-identifier|"string" "#
bare-identifier    	" (       (identifier-char - digit - sign) identifier-char*
                   	  | sign ((identifier-char - digit       ) identifier-char*)?
                   	  ) - keyword"
identifier-char    	r#" unicode - linespace - /\()[]{}<>,;=" "#
keyword            	"boolean|" null
prop               	identifier="value"
value            ; 	type?;  string|number|keyword
type             ; 	(identifier)_
/*                 	*/
newline            	"See Table: White_Space Line-break"
bom                	"\u{FEFF}"
unicode-space      	"See Table: White_Space unicode characters which are not `newline`"
single-line-comment	"// ^newline+ (newline | eof)"
multi-line-comment 	"/* commented-block"
commented-block    	"*/ | (multi-line-comment | * | / | [^*/]+) commented-block"
/*                 	*/
string           ; 	raw-string|escaped-string
escaped-string     	r#" " character*  "  "#
character          	r#" \ escape | [^\"] "#
escape             	r#"["\/bfnrt] | u{hex-digit × 1–6} "#
/*                 	*/
raw-string         	" r raw-string-hash"
raw-string-hash    	" # raw-string-hash # | raw-string-quotes"
raw-string-quotes  	r#" " .* " "#
/*                 	*/
number           ; 	decimal|hex|octal|binary
boolean            	true false
/*                 	*/
binary           ; 	sign? "0b [0-1]     ([0-1]     | _)*"
octal            ; 	sign? "0o [0-7]     ([0-7]     | _)*"
hex              ; 	sign? "0x hex-digit (hex-digit | _)*"
decimal          ; 	sign? "   integer                   (. integer)? exponent?"
integer          ; 	          digit    "(digit     | _)*"
exponent         ; 	                                                 e|E; sign? "integer"
digit              	" [0-9]       "
hex-digit          	" [0-9a-fA-F] "
sign               	"+|-"
/*                 	*/
//github.com/kdl-org/kdl/blob/main/SPEC_v1.md

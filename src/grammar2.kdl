/-kdl-version 2
┬Д "KDL Grammar" ­ЪћЌspec=(url)"github.com/kdl-org/kdl/blob/main/SPEC.md"\
  РдЁgРдє="(group)" |=(or)"|" set="сђћset-РљасђЋ" r#"set+Рља"# ┬гРДхРђю=r#"сђћ^\"сђЋ"#  /* \/;*=РДхРЂё№╝ЏРѕЌ  "=РђюorРђЮ newline=Рљц 'empty'=РѕЁ ignore unquoted ; " */
documentРађРађbom?РађРађversion?РађРађnodes
  bomРађРађРађРађРађРађРађРађРађРађРЅЮ 	 "\u{FEFF}"
  versionРађРађРађРађРађРађРЅЮ;	 /-РађuРља*Рађkdl-versionРађuРља+РађРдЁ1|2РдєРађuРља*РађРљц
  nodesРађРађРађРађРађРађРађРађРЅЮРађРађРдЁlineРља*Рађnode_prevРдє*
                  РађРдЁlineРља*Рађnode_lastРдє*РађlineРља*
    node_prevРађРађРЅЮРађРађnode_baseРађnode_end
    node_lastРађРађРЅЮРађРађnode_baseРађnode_end?
      node_baseРађРЅЮ; /-?Рађtype?РађnodeРља*Рађstring
        РдЁnodeРља+; /-?Рађnode_argРѕеpropРађРађРађРдє*     !="Slashdashed node_children must be after props and args"
        РдЁnodeРља+; /-РађРађnode_childrenРађРађРађРдє*
        РдЁnodeРља+РађРађРађРађРађРађnode_childrenРађРађРађРдє?
        РдЁnodeРља+; /-РађРађnode_childrenРађРађРађРдє*
        nodeРља*

┬Д "Entries"
node_argРѕеpropРађРађРЅЮРађРађprop|value
  propРађРађРађРађРађРађРађРађРађРЅЮРађРађstringРађnodeРља* "="; nodeРља*Рађvalue
  valueРађРађРађРађРађРађРађРађРЅЮРађРађtype?РађРађnodeРља*РађРађРађРађРађРађРађРађРађРађРађРдЁstringРађ|РађnumberРађ|РађkeywordРдє
  typeРађРађРађРађРађРађРађРађРађРЅЮ  "(";   nodeРља*РађРађРађРађРађРађРађРађРађРађРађРађstringРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађnodeРља* ")"
node_childrenРађРађРЅЮ  "{";    nodesРађnode_last? "}"
node_endРађРађРађРађРађРађРађРЅЮРађРађcomment_lineРађ|РађРљцРађ|Рађ№╝ЏРађ|Рађeof

┬Д "Strings"
stringРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађstr­ЪєћРађ|Рађstring_quotedРађ|Рађstring_rawРађРађ┬Х
  str­ЪєћРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађunambiguous­ЪєћРађ|Рађsigned­ЪєћРађ|Рађdotted­Ъєћ
    unambiguous­ЪєћРађРађРађРађРађРађРађРЅЮРађРађРађРађРађРађРдЁРдЁchar­ЪєћРађ-РађddigitРађ-Рађ┬▒Рађ-Рађ.РдєРађchar­Ъєћ*РдєРађ-Рађkeyword­Ъєћ­ЪЏЉ
    signed­ЪєћРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађ┬▒РађРађРађРађРдЁРдЁchar­ЪєћРађ-РађddigitРађРађРађРађРађ-Рађ.РдєРађchar­Ъєћ*Рдє?
    dotted­ЪєћРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађ┬▒?Рађ.РађРдЁРдЁchar­ЪєћРађ-РађddigitРађРађРађРађРађРађРађРађРдєРађchar­Ъєћ*Рдє?
    char­ЪєћРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађucharРађ-РађuРљаРађ-РађРљцРађ-Рађchar­Ъєћ┬гРађ-Рађchar­ЪЏЉ
    char­Ъєћ┬гРађРађРађРађРађРађРађРађРађРађРађРађРЅЮ  r#"(;){"}[#]/=\"#
    keyword­Ъєћ­ЪЏЉРађРађРађРађРађРађРађРађРЅЮРађРађtrueРађ|РађfalseРађ|РађnullРађ|РађinfРађ|Рађ-infРађ|Рађnan
  string_quotedРађРађРађРађРађРађРађРађРађРЅЮРађРађРађРђюРађРађРађРађstring_body_lineРађРађРађРађРађРађРађРађРађРађРађРађРађРађРђЮ
                         |РађРђюРђюРђюРађРађРљцРађstring_bodyРў░lineРађРађРљцРађРдЁuРља|wsРјІРдє*РађРађРђЮРђЮРђЮ
    string_body_lineРађРађРађРађРађРЅЮРађРађРдЁРађРађРађРађРађРађРађРађchar_strРађРађРађРађ-РађРљцРдє*
    string_bodyРў░lineРађРађРађРађРађРЅЮРађРађРдЁРдЁРђю|РђюРђюРдє?РађРађchar_strРађРађРађРађРађРађРдє*
    char_strРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађcharРјІРађ|РађuniРјІРађ|РађwsРјІРађ|Рађсђћ┬гРДхРђюсђЋРађ-Рађchar­ЪЏЉ
      charРјІРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађРДхРађРђюРДхbfnrts
      uniРјІРађРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађРДх "u{"; hdigit*1РђЊ6 "}"
      wsРјІРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађРДхРађРдЁuРља|РљцРдє+
  string_rawРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮРађРађ#Рађstring_raw_quotedРађ#
                        РађРађ|РађРађ#РађРађРађРађРађРађРађРађ­ЪЌўРађРађРађРађРађРађРађРађ#
    string_raw_quotedРађРађРађРађРађРЅЮРађРађРђюРађРађРађРађРађstring_raw_body_lineРађРађРађРађРађРађРађРађРађРђЮ
                           |РађРађРђюРђюРђюРађРљцРађstring_raw_bodyРў░lineРађРљцРађuРља*РађРђЮРђЮРђЮ
      string_raw_body_lineРађРЅЮРађРађРѕЁ
                           |РађРађРађРађРађРађРдЁchar_rawРађ-РађРђЮРдєРађchar_raw*?
                           |РађРђюРађРађРађРађРдЁchar_rawРађ-РађРђЮРдєРађchar_raw*?
        char_rawРађРађРађРађРађРађРађРађРађРађРЅЮРађРађРађucharРађ-РађРљцРађ-Рађchar­ЪЏЉ
      string_raw_bodyРў░lineРађРЅЮРађРађРдЁucharРађРађРађРађРађ-Рађchar­ЪЏЉРдє*?

┬Д "Numbers (space in сђћсђЋ is ignored)"
numberРађРађРађРађРађРађРађРЅЮРађРађkeyword_numberРађ|РађhexРађ|РађoctalРађ|РађbinaryРађ|Рађdecimal
  hexРађРађРађРађРађРађРађРађРЅЮ;       ┬▒?Рађ0xРађhdigitРађРдЁ_Рађ|РађhdigitРдє*
  octalРађРађРађРађРађРађРЅЮ;       ┬▒?Рађ0oРађсђћ0-7сђЋРађРађРађРађРађсђћ0-7_сђЋ*
  binaryРађРађРађРађРађРЅЮ;       ┬▒?Рађ0bРађсђћ0Рађ1сђЋРађРађРађРађРађсђћ0Рађ1_сђЋ*
  decimalРађРађРађРађРЅЮРађРађРађРађРађРађРађРађ┬▒?РађintegerРађРдЁ.РађintegerРдє?РађРё»?
    integerРађРађРЅЮРађРађРађРађРађРађРађРађРађРађРађРађРађсђћ0-9сђЋРађРађРађРађРађсђћ0-9_сђЋ*
    Рё»РађРађРађРађРађРађРађРађРЅЮРађРађсђћeEсђЋРађ┬▒?Рађinteger

  ┬▒РађРађРађРађРађРађРађРађРађРађРЅЮРађРађРађРађРађРађсђћ+-сђЋ
  hdigitРађРађРађРађРађРЅЮРађРађРађРађРађРађРађРађРађРађРађРађРађсђћ0-9a-fA-FсђЋ
  ddigitРађРађРађРађРађРЅЮРађРађРађРађРађРађРађРађРађРађРађРађРађсђћ0-9сђЋ

┬Д "Keywords and booleans"
keywordРађРађРађРађРађРађРађРађРЅЮРађbooleanРађ|Рађ#null
keyword_numberРађРЅЮРађРађ#infРађРађРађ|Рађ#-infРађ|Рађ#nan
booleanРађРађРађРађРађРађРађРађРЅЮРађ#trueРађРађРађ|Рађ#false

┬Д "Specific code points"
bomРађРађРађРађРађРађРађРађРађРађРађРЅЮ "\u{FEFF}"
char­ЪЏЉРађРађРађРађРађРађРађРађРЅЮ "control" "surrogate" "direction control" ("2nd+")"bom" (­ЪћЌspec)"disallowed-literal-code-points"
ucharРађРађРађРађРађРађРађРађРађРЅЮ "Any unicode Scalar Value (no surrogates)"
uРљаРађРађРађРађРађРађРађРађРађРађРађРађРЅЮ "Non line-breaking unicode White_Space" (­ЪћЌspec)"whitespace"

┬Д "Comments (// /* */ after РЅЮ serve as definition symbols)"
comment_lineРађРађРађРађРађРађРЅЮ   // ┬гРљц* РдЁРљц | eofРдє
comment_blockРађРађРађРађРађРЅЮ;  /* commented_block
  commented_blockРађРЅЮ   */
                  |РађРдЁcomment_blockРађ|Рађ*Рађ|РађРЂёРађ|Рађсђћ┬г*РЂёсђЋ+РдєРађРађ­ЪЌў
/-РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРЅЮ;  /-РађlineРља*

┬Д "Whitespace"
lineРљаРађРађРађРађРађРађРађРађРађРађРЅЮРађРађnodeРљаРађ|РађРљцРађ|Рађcomment_line  !="Whitespace               where newlines are allowed"
  nodeРљаРађРађРађРађРађРађРађРађРЅЮРађРађРађws*РађesclineРађws*Рађ|Рађws+    !="Whitespace within nodes, where newline-ish things must be esclined"
    wsРађРађРађРађРађРађРађРађРађРЅЮРађРађРађРађuРљаРађ|Рађcomment_block
    esclineРађРађРађРађРЅЮРађРађРДхРађws*РађРађРдЁcomment_lineРађ|РађРљцРађ|РађeofРдє
  РљцРађРађРађРађРађРађРађРађРађРађРађРЅЮ  "Line-breaking unicode White_Space" (­ЪћЌspec)"newline"

┬Д "Grammar language: a combination of ABNF with some regex spice thrown in" {
  - "Some symbols are represented with unicode alternatives to avoid the need to quote"
    /* \РДх  /РЂё  ;№╝Џ  *РѕЌ  "Рђю or "РђЮ   {Рје }Рјг   newline=Рљц   'empty'=РѕЁ */
  - r#";"\"#="serve as regular KDL syntax, not part of definition (special unicode symbols do that)"\
    r#"РЅЮ;"#="semicolon is used just to make the following definition a valid syntax:  versionРађРЅЮ;	/-РађuРља*  "
  - !="tip/comment"
  - ┬Д="section marker"
  - r#"""#="Double quotes are used to denote literal text"
  - r#"\"#="within a literal string is used for escaping: \" or \\, and initiating uchar chars in hex \u{FEFF}"
  - ­ЪЌў=r#"self-referential sign, e.g., the following are the same
    raw-s РЅЮ # raw-s-quote # | # raw-s #
    raw-s РЅЮ # raw-s-quote # | # ­ЪЌў    #  "#
  Regex                                                           	\
    *="zero or more (greedy, match as many instances as possible)"	\
    *1РђЊ6="inclusive range: at least 1 at most 6"                  	\
    +="one  or more (greedy)"                                     	\
    ?="zero or one"                                               	\
    *?="zero or more (non-greedy, match as few instances as possible; used only in raw strings)"\
    ┬г="or ^: not this"            	\
    "0-9"="char range (inclusive)"	\
    ┬гРДхРђю="[^\\\"]" "сђћset-РљасђЋ"="[a b]" r#"set+Рља"#="[ab]" РЅЮ="Used as regex-style char set matches like [], where any char will be a single match (no escapes needed due to special enclosing syntax)"\
    "сђћset-РљасђЋ can contain whitespace for alignment which is ignored for matching"
    РдЁgroupРдє "used to group matches that must be matched together"
    a|b "means `a or b`, whichever matches first. Multiple items before `|` are a single group" "a b c | d"="(a b c) | d"
  - -="used for 'except for' or 'minus' whatever follows it" "ucharРађ-РађРљц"="anything matching the 'uchar' rule (unicode chars) except for something that matches 'Рљц' rule (newline whitespace)"
  prefix ^=(or)"┬г" "'does not match' whatever follows it:" ^foo="must not match 'foo'"
  - ┬Х="cut point: always matches and consumes no characters, but once matched, the parser is not allowed to backtrack past that point in the source. If a parser would rewind past the cut point, it must instead fail the overall parse, as if it had run out of options (only for 'rastring_raw' to ensure the 1st instance of the appropriate closing quote sequence ends it)"
  - "A single definition may be split over multiple lines. Newlines are treated as spaces"
}
